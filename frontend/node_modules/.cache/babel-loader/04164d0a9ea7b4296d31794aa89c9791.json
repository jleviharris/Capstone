{"ast":null,"code":"// do not edit .js files directly - edit src/index.jst\nvar fastDeepEqual = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n\n\n  return a !== a && b !== b;\n};\n/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst DEFAULT_ID = \"__googleMapsScriptId\";\n/**\n * The status of the [[Loader]].\n */\n\nvar LoaderStatus;\n\n(function (LoaderStatus) {\n  LoaderStatus[LoaderStatus[\"INITIALIZED\"] = 0] = \"INITIALIZED\";\n  LoaderStatus[LoaderStatus[\"LOADING\"] = 1] = \"LOADING\";\n  LoaderStatus[LoaderStatus[\"SUCCESS\"] = 2] = \"SUCCESS\";\n  LoaderStatus[LoaderStatus[\"FAILURE\"] = 3] = \"FAILURE\";\n})(LoaderStatus || (LoaderStatus = {}));\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\n\n\nclass Loader {\n  /**\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n   * using this library, instead the defaults are set by the Google Maps\n   * JavaScript API server.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n   * ```\n   */\n  constructor(_ref) {\n    let {\n      apiKey,\n      authReferrerPolicy,\n      channel,\n      client,\n      id = DEFAULT_ID,\n      language,\n      libraries = [],\n      mapIds,\n      nonce,\n      region,\n      retries = 3,\n      url = \"https://maps.googleapis.com/maps/api/js\",\n      version\n    } = _ref;\n    this.CALLBACK = \"__googleMapsCallback\";\n    this.callbacks = [];\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.apiKey = apiKey;\n    this.authReferrerPolicy = authReferrerPolicy;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n\n    this.language = language;\n    this.libraries = libraries;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.region = region;\n    this.retries = retries;\n    this.url = url;\n    this.version = version;\n\n    if (Loader.instance) {\n      if (!fastDeepEqual(this.options, Loader.instance.options)) {\n        throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  get options() {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url,\n      authReferrerPolicy: this.authReferrerPolicy\n    };\n  }\n\n  get status() {\n    if (this.errors.length) {\n      return LoaderStatus.FAILURE;\n    }\n\n    if (this.done) {\n      return LoaderStatus.SUCCESS;\n    }\n\n    if (this.loading) {\n      return LoaderStatus.LOADING;\n    }\n\n    return LoaderStatus.INITIALIZED;\n  }\n\n  get failed() {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n  /**\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n   *\n   * @ignore\n   */\n\n\n  createUrl() {\n    let url = this.url;\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    if (this.authReferrerPolicy) {\n      url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n    }\n\n    return url;\n  }\n\n  deleteScript() {\n    const script = document.getElementById(this.id);\n\n    if (script) {\n      script.remove();\n    }\n  }\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   */\n\n\n  load() {\n    return this.loadPromise();\n  }\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   *\n   * @ignore\n   */\n\n\n  loadPromise() {\n    return new Promise((resolve, reject) => {\n      this.loadCallback(err => {\n        if (!err) {\n          resolve(window.google);\n        } else {\n          reject(err.error);\n        }\n      });\n    });\n  }\n  /**\n   * Load the Google Maps JavaScript API script with a callback.\n   */\n\n\n  loadCallback(fn) {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n  /**\n   * Set the script on document.\n   */\n\n\n  setScript() {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n  /**\n   * Reset the loader state.\n   */\n\n\n  reset() {\n    this.deleteScript();\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.onerrorEvent = null;\n  }\n\n  resetIfRetryingFailed() {\n    if (this.failed) {\n      this.reset();\n    }\n  }\n\n  loadErrorCallback(e) {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * Math.pow(2, this.errors.length);\n      console.log(`Failed to load Google Maps script, retrying in ${delay} ms.`);\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  setCallback() {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  callback() {\n    this.done = true;\n    this.loading = false;\n    this.callbacks.forEach(cb => {\n      cb(this.onerrorEvent);\n    });\n    this.callbacks = [];\n  }\n\n  execute() {\n    this.resetIfRetryingFailed();\n\n    if (this.done) {\n      this.callback();\n    } else {\n      // short circuit and warn if google.maps is already loaded\n      if (window.google && window.google.maps && window.google.maps.version) {\n        console.warn(\"Google Maps already loaded outside @googlemaps/js-api-loader.\" + \"This may result in undesirable behavior as options and script parameters may not match.\");\n        this.callback();\n        return;\n      }\n\n      if (this.loading) ;else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n\n}\n\nexport { DEFAULT_ID, Loader, LoaderStatus };","map":{"version":3,"mappings":"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","names":["equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","DEFAULT_ID","LoaderStatus","Loader","apiKey","authReferrerPolicy","channel","client","id","language","libraries","mapIds","nonce","region","retries","url","version","CALLBACK","callbacks","done","loading","errors","instance","isEqual","options","Error","stringify","JSON","status","FAILURE","SUCCESS","LOADING","INITIALIZED","failed","createUrl","join","deleteScript","script","document","getElementById","remove","load","loadPromise","Promise","resolve","reject","loadCallback","err","window","google","error","fn","push","execute","setScript","callback","createElement","type","src","onerror","loadErrorCallback","bind","defer","async","head","appendChild","reset","onerrorEvent","resetIfRetryingFailed","e","delay","Math","console","log","setTimeout","setCallback","__googleMapsCallback","forEach","cb","maps","warn"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/node_modules/@googlemaps/js-api-loader/node_modules/fast-deep-equal/index.js","/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/node_modules/@googlemaps/js-api-loader/src/index.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at.\n *\n *      Http://www.apache.org/licenses/LICENSE-2.0.\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport isEqual from \"fast-deep-equal\";\n\n/**\n * @ignore\n */\ndeclare global {\n  interface Window {\n    __googleMapsCallback: (e: Event) => void;\n  }\n}\n\nexport const DEFAULT_ID = \"__googleMapsScriptId\";\n\nexport type Libraries = (\n  | \"drawing\"\n  | \"geometry\"\n  | \"localContext\"\n  | \"places\"\n  | \"visualization\"\n)[];\n\n/**\n * The Google Maps JavaScript API\n * [documentation](https://developers.google.com/maps/documentation/javascript/tutorial)\n * is the authoritative source for [[LoaderOptions]].\n/**\n * Loader options\n */\nexport interface LoaderOptions {\n  /**\n   * See https://developers.google.com/maps/documentation/javascript/get-api-key.\n   */\n  apiKey: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview.\n   */\n  channel?: string;\n  /**\n   * @deprecated See https://developers.google.com/maps/premium/overview, use `apiKey` instead.\n   */\n  client?: string;\n  /**\n   * In your application you can specify release channels or version numbers:\n   *\n   * The weekly version is specified with `version=weekly`. This version is\n   * updated once per week, and is the most current.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly'});\n   * ```\n   *\n   * The quarterly version is specified with `version=quarterly`. This version\n   * is updated once per quarter, and is the most predictable.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'quarterly'});\n   * ```\n   *\n   * The version number is specified with `version=n.nn`. You can choose\n   * `version=3.40`, `version=3.39`, or `version=3.38`. Version numbers are\n   * updated once per quarter.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: '3.40'});\n   * ```\n   *\n   * If you do not explicitly specify a version, you will receive the\n   * weekly version by default.\n   */\n  version?: string;\n  /**\n   * The id of the script tag. Before adding a new script, the Loader will check for an existing one.\n   */\n  id?: string;\n  /**\n   * When loading the Maps JavaScript API via the URL you may optionally load\n   * additional libraries through use of the libraries URL parameter. Libraries\n   * are modules of code that provide additional functionality to the main Maps\n   * JavaScript API but are not loaded unless you specifically request them.\n   *\n   * ```\n   * const loader = Loader({\n   *  apiKey,\n   *  libraries: ['drawing', 'geometry', 'places', 'visualization'],\n   * });\n   * ```\n   *\n   * Set the [list of libraries](https://developers.google.com/maps/documentation/javascript/libraries) for more options.\n   */\n  libraries?: Libraries;\n  /**\n   * By default, the Maps JavaScript API uses the user's preferred language\n   * setting as specified in the browser, when displaying textual information\n   * such as the names for controls, copyright notices, driving directions and\n   * labels on maps. In most cases, it's preferable to respect the browser\n   * setting. However, if you want the Maps JavaScript API to ignore the\n   * browser's language setting, you can force it to display information in a\n   * particular language when loading the Maps JavaScript API code.\n   *\n   * For example, the following example localizes the language to Japan:\n   *\n   * ```\n   * const loader = Loader({apiKey, language: 'ja', region: 'JP'});\n   * ```\n   *\n   * See the [list of supported\n   * languages](https://developers.google.com/maps/faq#languagesupport). Note\n   * that new languages are added often, so this list may not be exhaustive.\n   *\n   */\n  language?: string;\n  /**\n   * When you load the Maps JavaScript API from maps.googleapis.com it applies a\n   * default bias for application behavior towards the United States. If you\n   * want to alter your application to serve different map tiles or bias the\n   * application (such as biasing geocoding results towards the region), you can\n   * override this default behavior by adding a region parameter when loading\n   * the Maps JavaScript API code.\n   *\n   * The region parameter accepts Unicode region subtag identifiers which\n   * (generally) have a one-to-one mapping to country code Top-Level Domains\n   * (ccTLDs). Most Unicode region identifiers are identical to ISO 3166-1\n   * codes, with some notable exceptions. For example, Great Britain's ccTLD is\n   * \"uk\" (corresponding to the domain .co.uk) while its region identifier is\n   * \"GB.\"\n   *\n   * For example, the following example localizes the map to the United Kingdom:\n   *\n   * ```\n   * const loader = Loader({apiKey, region: 'GB'});\n   * ```\n   */\n  region?: string;\n  /**\n   * @deprecated Passing `mapIds` is no longer required in the script tag.\n   */\n  mapIds?: string[];\n  /**\n   * Use a custom url and path to load the Google Maps API script.\n   */\n  url?: string;\n  /**\n   * Use a cryptographic nonce attribute.\n   */\n  nonce?: string;\n  /**\n   * The number of script load retries.\n   */\n  retries?: number;\n  /**\n   * Maps JS customers can configure HTTP Referrer Restrictions in the Cloud\n   * Console to limit which URLs are allowed to use a particular API Key. By\n   * default, these restrictions can be configured to allow only certain paths\n   * to use an API Key. If any URL on the same domain or origin may use the API\n   * Key, you can set `auth_referrer_policy=origin` to limit the amount of data\n   * sent when authorizing requests from the Maps JavaScript API. This is\n   * available starting in version 3.46. When this parameter is specified and\n   * HTTP Referrer Restrictions are enabled on Cloud Console, Maps JavaScript\n   * API will only be able to load if there is an HTTP Referrer Restriction that\n   * matches the current website's domain without a path specified.\n   */\n  authReferrerPolicy?: \"origin\";\n}\n\n/**\n * The status of the [[Loader]].\n */\nexport enum LoaderStatus {\n  INITIALIZED,\n  LOADING,\n  SUCCESS,\n  FAILURE,\n}\n\n/**\n * [[Loader]] makes it easier to add Google Maps JavaScript API to your application\n * dynamically using\n * [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n * It works by dynamically creating and appending a script node to the the\n * document head and wrapping the callback function so as to return a promise.\n *\n * ```\n * const loader = new Loader({\n *   apiKey: \"\",\n *   version: \"weekly\",\n *   libraries: [\"places\"]\n * });\n *\n * loader.load().then((google) => {\n *   const map = new google.maps.Map(...)\n * })\n * ```\n */\nexport class Loader {\n  private static instance: Loader;\n  /**\n   * See [[LoaderOptions.version]]\n   */\n  public readonly version: string;\n  /**\n   * See [[LoaderOptions.apiKey]]\n   */\n  public readonly apiKey: string;\n  /**\n   * See [[LoaderOptions.channel]]\n   */\n  public readonly channel: string;\n  /**\n   * See [[LoaderOptions.client]]\n   */\n  public readonly client: string;\n  /**\n   * See [[LoaderOptions.id]]\n   */\n  public readonly id: string;\n  /**\n   * See [[LoaderOptions.libraries]]\n   */\n  public readonly libraries: Libraries;\n  /**\n   * See [[LoaderOptions.language]]\n   */\n  public readonly language: string;\n\n  /**\n   * See [[LoaderOptions.region]]\n   */\n  public readonly region: string;\n\n  /**\n   * See [[LoaderOptions.mapIds]]\n   */\n  public readonly mapIds: string[];\n\n  /**\n   * See [[LoaderOptions.nonce]]\n   */\n  public readonly nonce: string | null;\n\n  /**\n   * See [[LoaderOptions.retries]]\n   */\n  public readonly retries: number;\n\n  /**\n   * See [[LoaderOptions.url]]\n   */\n  public readonly url: string;\n  /**\n   * See [[LoaderOptions.authReferrerPolicy]]\n   */\n  public readonly authReferrerPolicy: \"origin\";\n\n  private CALLBACK = \"__googleMapsCallback\";\n  private callbacks: ((e: ErrorEvent) => void)[] = [];\n  private done = false;\n  private loading = false;\n  private onerrorEvent: ErrorEvent;\n  private errors: ErrorEvent[] = [];\n\n  /**\n   * Creates an instance of Loader using [[LoaderOptions]]. No defaults are set\n   * using this library, instead the defaults are set by the Google Maps\n   * JavaScript API server.\n   *\n   * ```\n   * const loader = Loader({apiKey, version: 'weekly', libraries: ['places']});\n   * ```\n   */\n  constructor({\n    apiKey,\n    authReferrerPolicy,\n    channel,\n    client,\n    id = DEFAULT_ID,\n    language,\n    libraries = [],\n    mapIds,\n    nonce,\n    region,\n    retries = 3,\n    url = \"https://maps.googleapis.com/maps/api/js\",\n    version,\n  }: LoaderOptions) {\n    this.apiKey = apiKey;\n    this.authReferrerPolicy = authReferrerPolicy;\n    this.channel = channel;\n    this.client = client;\n    this.id = id || DEFAULT_ID; // Do not allow empty string\n    this.language = language;\n    this.libraries = libraries;\n    this.mapIds = mapIds;\n    this.nonce = nonce;\n    this.region = region;\n    this.retries = retries;\n    this.url = url;\n    this.version = version;\n\n    if (Loader.instance) {\n      if (!isEqual(this.options, Loader.instance.options)) {\n        throw new Error(\n          `Loader must not be called again with different options. ${JSON.stringify(\n            this.options\n          )} !== ${JSON.stringify(Loader.instance.options)}`\n        );\n      }\n\n      return Loader.instance;\n    }\n\n    Loader.instance = this;\n  }\n\n  public get options(): LoaderOptions {\n    return {\n      version: this.version,\n      apiKey: this.apiKey,\n      channel: this.channel,\n      client: this.client,\n      id: this.id,\n      libraries: this.libraries,\n      language: this.language,\n      region: this.region,\n      mapIds: this.mapIds,\n      nonce: this.nonce,\n      url: this.url,\n      authReferrerPolicy: this.authReferrerPolicy,\n    };\n  }\n\n  public get status(): LoaderStatus {\n    if (this.errors.length) {\n      return LoaderStatus.FAILURE;\n    }\n    if (this.done) {\n      return LoaderStatus.SUCCESS;\n    }\n    if (this.loading) {\n      return LoaderStatus.LOADING;\n    }\n    return LoaderStatus.INITIALIZED;\n  }\n\n  private get failed(): boolean {\n    return this.done && !this.loading && this.errors.length >= this.retries + 1;\n  }\n\n  /**\n   * CreateUrl returns the Google Maps JavaScript API script url given the [[LoaderOptions]].\n   *\n   * @ignore\n   */\n  public createUrl(): string {\n    let url = this.url;\n\n    url += `?callback=${this.CALLBACK}`;\n\n    if (this.apiKey) {\n      url += `&key=${this.apiKey}`;\n    }\n\n    if (this.channel) {\n      url += `&channel=${this.channel}`;\n    }\n\n    if (this.client) {\n      url += `&client=${this.client}`;\n    }\n\n    if (this.libraries.length > 0) {\n      url += `&libraries=${this.libraries.join(\",\")}`;\n    }\n\n    if (this.language) {\n      url += `&language=${this.language}`;\n    }\n\n    if (this.region) {\n      url += `&region=${this.region}`;\n    }\n\n    if (this.version) {\n      url += `&v=${this.version}`;\n    }\n\n    if (this.mapIds) {\n      url += `&map_ids=${this.mapIds.join(\",\")}`;\n    }\n\n    if (this.authReferrerPolicy) {\n      url += `&auth_referrer_policy=${this.authReferrerPolicy}`;\n    }\n\n    return url;\n  }\n\n  public deleteScript(): void {\n    const script = document.getElementById(this.id);\n    if (script) {\n      script.remove();\n    }\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   */\n  public load(): Promise<typeof google> {\n    return this.loadPromise();\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script and return a Promise.\n   *\n   * @ignore\n   */\n  public loadPromise(): Promise<typeof google> {\n    return new Promise((resolve, reject) => {\n      this.loadCallback((err: ErrorEvent) => {\n        if (!err) {\n          resolve(window.google);\n        } else {\n          reject(err.error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Load the Google Maps JavaScript API script with a callback.\n   */\n  public loadCallback(fn: (e: ErrorEvent) => void): void {\n    this.callbacks.push(fn);\n    this.execute();\n  }\n\n  /**\n   * Set the script on document.\n   */\n  private setScript(): void {\n    if (document.getElementById(this.id)) {\n      // TODO wrap onerror callback for cases where the script was loaded elsewhere\n      this.callback();\n      return;\n    }\n\n    const url = this.createUrl();\n    const script = document.createElement(\"script\");\n    script.id = this.id;\n    script.type = \"text/javascript\";\n    script.src = url;\n    script.onerror = this.loadErrorCallback.bind(this);\n    script.defer = true;\n    script.async = true;\n\n    if (this.nonce) {\n      script.nonce = this.nonce;\n    }\n\n    document.head.appendChild(script);\n  }\n\n  /**\n   * Reset the loader state.\n   */\n  private reset(): void {\n    this.deleteScript();\n    this.done = false;\n    this.loading = false;\n    this.errors = [];\n    this.onerrorEvent = null;\n  }\n\n  private resetIfRetryingFailed(): void {\n    if (this.failed) {\n      this.reset();\n    }\n  }\n\n  private loadErrorCallback(e: ErrorEvent): void {\n    this.errors.push(e);\n\n    if (this.errors.length <= this.retries) {\n      const delay = this.errors.length * 2 ** this.errors.length;\n\n      console.log(\n        `Failed to load Google Maps script, retrying in ${delay} ms.`\n      );\n\n      setTimeout(() => {\n        this.deleteScript();\n        this.setScript();\n      }, delay);\n    } else {\n      this.onerrorEvent = e;\n      this.callback();\n    }\n  }\n\n  private setCallback(): void {\n    window.__googleMapsCallback = this.callback.bind(this);\n  }\n\n  private callback(): void {\n    this.done = true;\n    this.loading = false;\n\n    this.callbacks.forEach((cb) => {\n      cb(this.onerrorEvent);\n    });\n\n    this.callbacks = [];\n  }\n\n  private execute(): void {\n    this.resetIfRetryingFailed();\n\n    if (this.done) {\n      this.callback();\n    } else {\n      // short circuit and warn if google.maps is already loaded\n      if (window.google && window.google.maps && window.google.maps.version) {\n        console.warn(\n          \"Google Maps already loaded outside @googlemaps/js-api-loader.\" +\n            \"This may result in undesirable behavior as options and script parameters may not match.\"\n        );\n        this.callback();\n        return;\n      }\n\n      if (this.loading) {\n        // do nothing but wait\n      } else {\n        this.loading = true;\n        this.setCallback();\n        this.setScript();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}