{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useCustomForm = function () {\n  _s();\n\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let onSubmit = arguments.length > 1 ? arguments[1] : undefined;\n  const [formData, setFormValues] = useState(initialValues);\n\n  const handleInputChange = e => {\n    if (e.target.name === \"isAdmin\") {\n      setFormValues({ ...formData,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setFormValues({ ...formData,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  const reset = () => {\n    setFormValues(initialValues);\n  };\n\n  return [formData, handleInputChange, handleSubmit, reset];\n};\n\n_s(useCustomForm, \"mLT7Kmj7ghAdxPvP5ueXW+g9F+k=\");\n\nexport default useCustomForm;","map":{"version":3,"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/hooks/useCustomForm.js"],"names":["useState","useCustomForm","initialValues","onSubmit","formData","setFormValues","handleInputChange","e","target","name","checked","value","handleSubmit","preventDefault","reset"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,aAAa,GAAG,YAAkC;AAAA;;AAAA,MAAjCC,aAAiC,uEAAjB,EAAiB;AAAA,MAAbC,QAAa;AACtD,QAAM,CAACC,QAAD,EAAWC,aAAX,IAA4BL,QAAQ,CAACE,aAAD,CAA1C;;AAEA,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,SAAtB,EAAiC;AAC/BJ,MAAAA,aAAa,CAAC,EAAE,GAAGD,QAAL;AAAe,SAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,OAAD,CAAb;AACD,KAFD,MAEO;AACLL,MAAAA,aAAa,CAAC,EAAE,GAAGD,QAAL;AAAe,SAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAAzC,OAAD,CAAb;AACD;AACF,GAND;;AAQA,QAAMC,YAAY,GAAIL,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMU,KAAK,GAAG,MAAM;AAClBT,IAAAA,aAAa,CAACH,aAAD,CAAb;AACD,GAFD;;AAIA,SAAO,CAACE,QAAD,EAAWE,iBAAX,EAA8BM,YAA9B,EAA4CE,KAA5C,CAAP;AACD,CArBD;;GAAMb,a;;AAuBN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useCustomForm = (initialValues = {}, onSubmit) => {\n  const [formData, setFormValues] = useState(initialValues);\n\n  const handleInputChange = (e) => {\n    if (e.target.name === \"isAdmin\") {\n      setFormValues({ ...formData, [e.target.name]: e.target.checked });\n    } else {\n      setFormValues({ ...formData, [e.target.name]: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formData);\n  };\n\n  const reset = () => {\n    setFormValues(initialValues);\n  };\n\n  return [formData, handleInputChange, handleSubmit, reset];\n};\n\nexport default useCustomForm;\n"]},"metadata":{},"sourceType":"module"}