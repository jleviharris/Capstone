{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/pages/MyPosts/myPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CreatePost from \"../../components/Posts/createPosts\";\nimport DisplayPosts from \"../../components/Posts/displayPosts\";\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport AuthContext from \"../../context/AuthContext\";\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport DisplaySinglePost from \"../../components/Posts/displaySinglePost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPosts = () => {\n  _s();\n\n  const [postList, setPostList] = useState([]);\n  const [post, setPost] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  const userId = user._id || null;\n  const [update, setUpdate] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const [singlePost, setSinglePost] = useState();\n  useEffect(() => {\n    getPosts(userId);\n  }, [update]);\n\n  function handleClick() {\n    setUpdate(!update);\n  }\n\n  async function getPosts(userId) {\n    let posts = await AxiosPosts.getPosts(userId);\n\n    if (posts) {\n      setPostList(posts);\n    } else setPostList({\n      Object: \"No Posts\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hidden === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        userId: userId,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(DisplayPosts, {\n          postList: postList,\n          post: post,\n          hidden: hidden,\n          setHidden: setHidden,\n          setSinglePost: setSinglePost,\n          singlePost: singlePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), hidden && /*#__PURE__*/_jsxDEV(DisplaySinglePost, {\n      setSinglePost: setSinglePost,\n      singlePost: singlePost,\n      setHidden: setHidden,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyPosts, \"G2NGeomjaurDheTnw+lTA5Zk3pE=\");\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/pages/MyPosts/myPosts.js"],"names":["React","useContext","useEffect","useState","CreatePost","DisplayPosts","AxiosPosts","AuthContext","ErrorBoundary","DisplaySinglePost","MyPosts","postList","setPostList","post","setPost","user","userId","_id","update","setUpdate","hidden","setHidden","singlePost","setSinglePost","getPosts","handleClick","posts","Object"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWd,UAAU,CAACM,WAAD,CAA3B;AACA,QAAMS,MAAM,GAAGD,IAAI,CAACE,GAAL,IAAY,IAA3B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACR,MAAD,CAAR;AACD,GAFQ,EAEN,CAACE,MAAD,CAFM,CAAT;;AAIA,WAASO,WAAT,GAAuB;AACrBN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,iBAAeM,QAAf,CAAwBR,MAAxB,EAAgC;AAC9B,QAAIU,KAAK,GAAG,MAAMpB,UAAU,CAACkB,QAAX,CAAoBR,MAApB,CAAlB;;AACA,QAAIU,KAAJ,EAAW;AACTd,MAAAA,WAAW,CAACc,KAAD,CAAX;AACD,KAFD,MAEOd,WAAW,CAAC;AAAEe,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAX;AACR;;AAED,sBACE;AAAA,eACGP,MAAM,KAAK,KAAX,iBACC;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEJ,MAApB;AAA4B,QAAA,WAAW,EAAES;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,QAAQ,EAAEd,QADZ;AAEE,UAAA,IAAI,EAAEE,IAFR;AAGE,UAAA,MAAM,EAAEO,MAHV;AAIE,UAAA,SAAS,EAAEC,SAJb;AAKE,UAAA,aAAa,EAAEE,aALjB;AAME,UAAA,UAAU,EAAED;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAgBGF,MAAM,iBACL,QAAC,iBAAD;AACE,MAAA,aAAa,EAAEG,aADjB;AAEE,MAAA,UAAU,EAAED,UAFd;AAGE,MAAA,SAAS,EAAED,SAHb;AAIE,MAAA,WAAW,EAAEI;AAJf;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAnDD;;GAAMf,O;;KAAAA,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport CreatePost from \"../../components/Posts/createPosts\";\nimport DisplayPosts from \"../../components/Posts/displayPosts\";\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport AuthContext from \"../../context/AuthContext\";\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport DisplaySinglePost from \"../../components/Posts/displaySinglePost\";\n\nconst MyPosts = () => {\n  const [postList, setPostList] = useState([]);\n  const [post, setPost] = useState(\"\");\n  const { user } = useContext(AuthContext);\n  const userId = user._id || null;\n  const [update, setUpdate] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  const [singlePost, setSinglePost] = useState();\n\n  useEffect(() => {\n    getPosts(userId);\n  }, [update]);\n\n  function handleClick() {\n    setUpdate(!update);\n  }\n\n  async function getPosts(userId) {\n    let posts = await AxiosPosts.getPosts(userId);\n    if (posts) {\n      setPostList(posts);\n    } else setPostList({ Object: \"No Posts\" });\n  }\n\n  return (\n    <div>\n      {hidden === false && (\n        <div>\n          <CreatePost userId={userId} handleClick={handleClick} />\n          <ErrorBoundary>\n            <DisplayPosts\n              postList={postList}\n              post={post}\n              hidden={hidden}\n              setHidden={setHidden}\n              setSinglePost={setSinglePost}\n              singlePost={singlePost}\n            />\n          </ErrorBoundary>\n        </div>\n      )}\n      {hidden && (\n        <DisplaySinglePost\n          setSinglePost={setSinglePost}\n          singlePost={singlePost}\n          setHidden={setHidden}\n          handleClick={handleClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}