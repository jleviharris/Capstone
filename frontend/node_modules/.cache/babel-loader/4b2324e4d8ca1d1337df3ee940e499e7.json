{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/components/Posts/createPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport AxiosUsers from \"../../Routes/userRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = _ref => {\n  _s();\n\n  let {\n    userId,\n    handleClick\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n\n  function handlePost(event) {\n    event.preventDefault();\n\n    async function findName(userId) {\n      let name = await AxiosUsers.getUserName(userId);\n      return name;\n    }\n\n    let newPost = {\n      body: value,\n      userId: userId,\n      name: findName(userId)\n    };\n    createNewPost(newPost);\n    setValue(\"\");\n\n    let click = () => {\n      handleClick();\n    };\n\n    click();\n  }\n\n  async function createNewPost(obj) {\n    await AxiosPosts.updatePosts(obj);\n    return obj;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handlePost,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        value: value,\n        onChange: event => setValue(event.target.value),\n        onKeyUp: event => {\n          if (event.key === \"Enter\") {\n            handlePost(event);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePost, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","AxiosPosts","AxiosUsers","CreatePost","userId","handleClick","value","setValue","handlePost","event","preventDefault","findName","name","getUserName","newPost","body","createNewPost","click","obj","updatePosts","target","key"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/components/Posts/createPosts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport AxiosUsers from \"../../Routes/userRoutes\";\n\nconst CreatePost = ({ userId, handleClick }) => {\n  const [value, setValue] = useState(\"\");\n\n  function handlePost(event) {\n    event.preventDefault();\n    async function findName(userId) {\n      let name = await AxiosUsers.getUserName(userId);\n      return name;\n    }\n\n    let newPost = {\n      body: value,\n      userId: userId,\n      name: findName(userId),\n    };\n    createNewPost(newPost);\n    setValue(\"\");\n    let click = () => {\n      handleClick();\n    };\n    click();\n  }\n  async function createNewPost(obj) {\n    await AxiosPosts.updatePosts(obj);\n    return obj;\n  }\n\n  return (\n    <form onSubmit={handlePost}>\n      <label>Post</label>\n      <div>\n        <textarea\n          type=\"text\"\n          value={value}\n          onChange={(event) => setValue(event.target.value)}\n          onKeyUp={(event) => {\n            if (event.key === \"Enter\") {\n              handlePost(event);\n            }\n          }}\n        />\n        <button type=\"submit\">Post</button>\n      </div>\n    </form>\n  );\n};\nexport default CreatePost;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,UAAU,GAAG,QAA6B;EAAA;;EAAA,IAA5B;IAAEC,MAAF;IAAUC;EAAV,CAA4B;EAC9C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;EAEA,SAASQ,UAAT,CAAoBC,KAApB,EAA2B;IACzBA,KAAK,CAACC,cAAN;;IACA,eAAeC,QAAf,CAAwBP,MAAxB,EAAgC;MAC9B,IAAIQ,IAAI,GAAG,MAAMV,UAAU,CAACW,WAAX,CAAuBT,MAAvB,CAAjB;MACA,OAAOQ,IAAP;IACD;;IAED,IAAIE,OAAO,GAAG;MACZC,IAAI,EAAET,KADM;MAEZF,MAAM,EAAEA,MAFI;MAGZQ,IAAI,EAAED,QAAQ,CAACP,MAAD;IAHF,CAAd;IAKAY,aAAa,CAACF,OAAD,CAAb;IACAP,QAAQ,CAAC,EAAD,CAAR;;IACA,IAAIU,KAAK,GAAG,MAAM;MAChBZ,WAAW;IACZ,CAFD;;IAGAY,KAAK;EACN;;EACD,eAAeD,aAAf,CAA6BE,GAA7B,EAAkC;IAChC,MAAMjB,UAAU,CAACkB,WAAX,CAAuBD,GAAvB,CAAN;IACA,OAAOA,GAAP;EACD;;EAED,oBACE;IAAM,QAAQ,EAAEV,UAAhB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEF,KAFT;QAGE,QAAQ,EAAGG,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACW,MAAN,CAAad,KAAd,CAH/B;QAIE,OAAO,EAAGG,KAAD,IAAW;UAClB,IAAIA,KAAK,CAACY,GAAN,KAAc,OAAlB,EAA2B;YACzBb,UAAU,CAACC,KAAD,CAAV;UACD;QACF;MARH;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7CD;;GAAMN,U;;KAAAA,U;AA8CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}