{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3007/api\"; // Change status to online\n\nasync function online(userId) {\n  try {\n    let response = await axios.put(`${baseUrl}/status/online/626eeac409e264359b2611f4`, {\n      userId: userId\n    });\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error changing to online status: \" + error);\n  }\n} // Change status to offline\n\n\nasync function offline(userId) {\n  try {\n    let response = await axios.put(`${baseUrl}/status/offline/626eeac409e264359b2611f4`, {\n      userId: userId\n    });\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error changing to offline status: \" + error);\n  }\n}\n\nconst AxiosOnlineStatus = {\n  offline,\n  online\n};\nexport default AxiosOnlineStatus;","map":{"version":3,"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/Routes/status.js"],"names":["axios","baseUrl","online","userId","response","put","data","error","console","log","offline","AxiosOnlineStatus"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2BAAhB,C,CAEA;;AACA,eAAeC,MAAf,CAAsBC,MAAtB,EAA8B;AAC1B,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,yCAArB,EAA+D;AAACE,MAAAA,MAAM,EAAEA;AAAT,KAA/D,CAArB;;AACA,QAAIC,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCF,KAAlD;AACD;AACF,C,CAEH;;;AACA,eAAeG,OAAf,CAAuBP,MAAvB,EAA+B;AAC3B,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,0CAArB,EAAgE;AAACE,MAAAA,MAAM,EAAEA;AAAT,KAAhE,CAArB;;AACA,QAAIC,QAAJ,EAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD;AACF,GALD,CAKE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCF,KAAnD;AACD;AACF;;AAEH,MAAMI,iBAAiB,GAAG;AAACD,EAAAA,OAAD;AAAUR,EAAAA;AAAV,CAA1B;AACA,eAAeS,iBAAf","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3007/api\";\n\n// Change status to online\nasync function online(userId) {\n    try {\n      let response = await axios.put(`${baseUrl}/status/online/626eeac409e264359b2611f4`, {userId: userId});\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error changing to online status: \" + error);\n    }\n  }\n\n// Change status to offline\nasync function offline(userId) {\n    try {\n      let response = await axios.put(`${baseUrl}/status/offline/626eeac409e264359b2611f4`, {userId: userId});\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error changing to offline status: \" + error);\n    }\n  }\n\nconst AxiosOnlineStatus = {offline, online}\nexport default AxiosOnlineStatus;"]},"metadata":{},"sourceType":"module"}