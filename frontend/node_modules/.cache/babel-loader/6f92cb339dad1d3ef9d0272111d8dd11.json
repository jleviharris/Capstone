{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/components/Posts/displayPosts.js\";\nimport \"../Posts/MyPost.css\";\nimport CustomButton from \"./likeButton\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport AxiosSpots from \"../../Routes/spotsRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayPosts = _ref => {\n  let {\n    postList,\n    setHidden,\n    setSinglePost\n  } = _ref;\n\n  // const [postsSpot, setPostsSpot] = useState(\"\");\n  // async function getSpotFromPost(post) {\n  //   let id = post.spotId;\n  //   let spot = await AxiosSpots.getASpot(id);\n  //   if (spot) {\n  //     setPostsSpot(spot.name);\n  //   } else setPostsSpot(\"N/A\");\n  // }\n  function handleClick() {\n    setHidden(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postlist\",\n    children: postList.map((post, index) => {\n      function padTo2Digits(num) {\n        return String(num).padStart(2, \"0\");\n      }\n\n      const current = post.dateAdded;\n      const postDate = []`${current.getMonth() + 1}/${current.getDate()}/${current.getFullYear()}\n           at ${padTo2Digits(current.getHours())}:${padTo2Digits(current.getMinutes())}`; // console.log(post);\n      // getSpotFromPost(post);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postbody\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"my-review-button\",\n          onClick: () => {\n            handleClick(post);\n            setSinglePost(post);\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-container-reviews\",\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post\",\n            children: \"Post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"body-container-reviews\",\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post\",\n            children: \"Spot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }).reverse()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DisplayPosts;\nexport default DisplayPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayPosts\");","map":{"version":3,"names":["CustomButton","React","useState","AxiosSpots","DisplayPosts","postList","setHidden","setSinglePost","handleClick","map","post","index","padTo2Digits","num","String","padStart","current","dateAdded","postDate","getMonth","getDate","getFullYear","getHours","getMinutes","name","body","reverse"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/components/Posts/displayPosts.js"],"sourcesContent":["import \"../Posts/MyPost.css\";\n\nimport CustomButton from \"./likeButton\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport AxiosSpots from \"../../Routes/spotsRoutes\";\n\nconst DisplayPosts = ({ postList, setHidden, setSinglePost }) => {\n  // const [postsSpot, setPostsSpot] = useState(\"\");\n\n  // async function getSpotFromPost(post) {\n  //   let id = post.spotId;\n  //   let spot = await AxiosSpots.getASpot(id);\n  //   if (spot) {\n  //     setPostsSpot(spot.name);\n  //   } else setPostsSpot(\"N/A\");\n  // }\n  function handleClick() {\n    setHidden(true);\n  }\n\n  return (\n    <div className=\"postlist\">\n      {postList\n        .map((post, index) => {\n          function padTo2Digits(num) {\n            return String(num).padStart(2, \"0\");\n          }\n\n          const current = post.dateAdded;\n          const postDate =[ ]`${\n            current.getMonth() + 1\n          }/${current.getDate()}/${current.getFullYear()}\n           at ${padTo2Digits(current.getHours())}:${padTo2Digits(\n            current.getMinutes()\n          )}`\n\n          // console.log(post);\n          // getSpotFromPost(post);\n          return (\n            <div key={index} className=\"postbody\">\n              <button\n                className=\"my-review-button\"\n                onClick={() => {\n                  handleClick(post);\n                  setSinglePost(post);\n                }}\n              >\n                {\" \"}\n                <div className=\"name-container-reviews\">{post.name}</div>\n                {/* <div className=\"name-container-reviews\">{`${\n                  current.getMonth() + 1\n                }/${current.getDate()}/${current.getFullYear()}\n           at ${padTo2Digits(current.getHours())}:${padTo2Digits(\n                  current.getMinutes()\n                )}`}</div> */}\n                <br />\n                <p className=\"post\">Post:</p>\n                <div className=\"body-container-reviews\">{post.body}</div>\n                <p className=\"post\">Spot:</p>\n                {/* <div className=\"body-container\">{postsSpot}</div> */}\n              </button>\n\n              {/* <CustomButton post={post} /> */}\n            </div>\n          );\n        })\n        .reverse()}\n    </div>\n  );\n};\n\nexport default DisplayPosts;\n"],"mappings":";AAAA,OAAO,qBAAP;AAEA,OAAOA,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,YAAY,GAAG,QAA4C;EAAA,IAA3C;IAAEC,QAAF;IAAYC,SAAZ;IAAuBC;EAAvB,CAA2C;;EAC/D;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASC,WAAT,GAAuB;IACrBF,SAAS,CAAC,IAAD,CAAT;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,UACGD,QAAQ,CACNI,GADF,CACM,CAACC,IAAD,EAAOC,KAAP,KAAiB;MACpB,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;QACzB,OAAOC,MAAM,CAACD,GAAD,CAAN,CAAYE,QAAZ,CAAqB,CAArB,EAAwB,GAAxB,CAAP;MACD;;MAED,MAAMC,OAAO,GAAGN,IAAI,CAACO,SAArB;MACA,MAAMC,QAAQ,GAAE,EAAI,GAClBF,OAAO,CAACG,QAAR,KAAqB,CACtB,IAAGH,OAAO,CAACI,OAAR,EAAkB,IAAGJ,OAAO,CAACK,WAAR,EAAsB;AACzD,gBAAgBT,YAAY,CAACI,OAAO,CAACM,QAAR,EAAD,CAAqB,IAAGV,YAAY,CACpDI,OAAO,CAACO,UAAR,EADoD,CAEpD,EALF,CANoB,CAapB;MACA;;MACA,oBACE;QAAiB,SAAS,EAAC,UAA3B;QAAA,uBACE;UACE,SAAS,EAAC,kBADZ;UAEE,OAAO,EAAE,MAAM;YACbf,WAAW,CAACE,IAAD,CAAX;YACAH,aAAa,CAACG,IAAD,CAAb;UACD,CALH;UAAA,WAOG,GAPH,eAQE;YAAK,SAAS,EAAC,wBAAf;YAAA,UAAyCA,IAAI,CAACc;UAA9C;YAAA;YAAA;YAAA;UAAA,QARF,eAeE;YAAA;YAAA;YAAA;UAAA,QAfF,eAgBE;YAAG,SAAS,EAAC,MAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAhBF,eAiBE;YAAK,SAAS,EAAC,wBAAf;YAAA,UAAyCd,IAAI,CAACe;UAA9C;YAAA;YAAA;YAAA;UAAA,QAjBF,eAkBE;YAAG,SAAS,EAAC,MAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAlBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAUd,KAAV;QAAA;QAAA;QAAA;MAAA,QADF;IA2BD,CA3CF,EA4CEe,OA5CF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAiDD,CA/DD;;KAAMtB,Y;AAiEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}