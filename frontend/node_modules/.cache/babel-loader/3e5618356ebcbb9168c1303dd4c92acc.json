{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3007/api/users\";\n\nasync function updateUser(userId, body) {\n  let updateProperty = body.update.property;\n  let updateValue = body.update.value;\n  console.log(updateProperty);\n\n  try {\n    let response = await axios.put(`${baseUrl}/update`, {\n      id: userId,\n      body: {\n        [updateProperty]: updateValue\n      }\n    });\n    console.log(body);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error updating user: \" + error);\n  }\n}\n\nasync function getUser(userId) {\n  try {\n    let response = await axios.get(`${baseUrl}/${userId}`);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting user: \" + error);\n  }\n}\n\nasync function getAllUsers() {\n  try {\n    let response = await axios.get(`${baseUrl}/`);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting user: \" + error);\n  }\n}\n\nasync function getAllFriends(userId) {\n  try {\n    let response = await axios.get(`${baseUrl}/currentFriends/${userId}`);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting user: \" + error);\n  }\n}\n\nasync function getAllFriendRequests(userId) {\n  try {\n    let response = await axios.get(`${baseUrl}/friendRequests/${userId}`);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting user: \" + error);\n  }\n}\n\nasync function getAllSentFriendRequests(userId) {\n  try {\n    let response = await axios.get(`${baseUrl}/sentFriendRequests/${userId}`);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting user: \" + error);\n  }\n}\n\nasync function updateUsersFriendRequests(friendId, obj) {\n  try {\n    let response = await axios.put(\"http://localhost:3007/api/posts/like/\" + friendId, obj);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error adding like: \" + error);\n  }\n}\n\nconst AxiosUsers = {\n  getUser,\n  updateUser,\n  getAllUsers,\n  getAllFriends,\n  getAllFriendRequests,\n  getAllSentFriendRequests\n};\nexport default AxiosUsers;","map":{"version":3,"names":["axios","baseUrl","updateUser","userId","body","updateProperty","update","property","updateValue","value","console","log","response","put","id","data","error","getUser","get","getAllUsers","getAllFriends","getAllFriendRequests","getAllSentFriendRequests","updateUsersFriendRequests","friendId","obj","AxiosUsers"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/Routes/userRoutes.js"],"sourcesContent":["\nimport axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3007/api/users\";\n\nasync function updateUser(userId, body) {\n  let updateProperty = body.update.property\n  let updateValue = body.update.value\n  console.log(updateProperty)\n    try {\n      let response = await axios.put(`${baseUrl}/update`, {id: userId, body: {[updateProperty]: updateValue}});\n      console.log(body)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error updating user: \" + error);\n    }\n  }\n  async function getUser(userId){\n    try {\n      let response = await axios.get(`${baseUrl}/${userId}`)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error getting user: \" + error);\n    }\n  }\n  async function getAllUsers(){\n    try {\n      let response = await axios.get (`${baseUrl}/`)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error getting user: \" + error);\n    }\n  }\n  async function getAllFriends(userId){\n    try {\n      let response = await axios.get (`${baseUrl}/currentFriends/${userId}`)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error getting user: \" + error);\n    }\n  }\n  async function getAllFriendRequests(userId){\n    try {\n      let response = await axios.get (`${baseUrl}/friendRequests/${userId}`)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error getting user: \" + error);\n    }\n  }\n  async function getAllSentFriendRequests(userId){\n    try {\n      let response = await axios.get (`${baseUrl}/sentFriendRequests/${userId}`)\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error getting user: \" + error);\n    }\n  }\n  async function updateUsersFriendRequests(friendId, obj) {\n    try {\n      let response = await axios.put(\n        \"http://localhost:3007/api/posts/like/\" + friendId,\n        obj\n      );\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error adding like: \" + error);\n    }\n  }\n\n  const AxiosUsers = {getUser, updateUser, getAllUsers, getAllFriends, getAllFriendRequests, getAllSentFriendRequests}\n  export default AxiosUsers;"],"mappings":"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"},"metadata":{},"sourceType":"module"}