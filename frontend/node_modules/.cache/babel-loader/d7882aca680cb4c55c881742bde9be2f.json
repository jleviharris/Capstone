{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/pages/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport useCustomForm from \"../../hooks/useCustomForm\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const {\n    loginUser,\n    isServerError\n  } = useContext(AuthContext);\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const defaultValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const [formData, handleInputChange, handleSubmit, reset] = useCustomForm(defaultValues, loginUser);\n  useEffect(() => {\n    if (isServerError) {\n      reset();\n    }\n  }, [isServerError]);\n\n  const togglePassword = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n      return;\n    }\n\n    setPasswordType(\"password\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginFullPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"emailLabel\",\n            children: [\"Email:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: passwordType,\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: togglePassword,\n            children: [\" \", passwordType === \"password\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-eye-slash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), isServerError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"Login failed, incorrect credentials!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"loginButton\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registerLink\",\n            children: [\"Dont have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"8gEP/ty+qYmp3VX2shjwJlldBlY=\", false, function () {\n  return [useCustomForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","useCustomForm","Link","LoginPage","loginUser","isServerError","passwordType","setPasswordType","defaultValues","email","password","formData","handleInputChange","handleSubmit","reset","togglePassword"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/pages/LoginPage/LoginPage.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../../context/AuthContext\";\nimport useCustomForm from \"../../hooks/useCustomForm\";\nimport { Link } from \"react-router-dom\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = () => {\n  const { loginUser, isServerError } = useContext(AuthContext);\n  const [passwordType, setPasswordType] = useState(\"password\");\n  const defaultValues = { email: \"\", password: \"\" };\n  const [formData, handleInputChange, handleSubmit, reset] = useCustomForm(\n    defaultValues,\n    loginUser\n  );\n\n  useEffect(() => {\n    if (isServerError) {\n      reset();\n    }\n  }, [isServerError]);\n\n  const togglePassword = () => {\n    if (passwordType === \"password\") {\n      setPasswordType(\"text\");\n      return;\n    }\n    setPasswordType(\"password\");\n  };\n\n  return (\n    <div className=\"loginFullPage\">\n      <div className=\"container-0\">\n        <div className=\"loginForm\">\n          <form className=\"form\" onSubmit={handleSubmit}>\n            <label className=\"emailLabel\">\n              Email:{\" \"}\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n              />\n            </label>\n            <label>\n              Password:{\" \"}\n              <input\n                type={passwordType}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n              />\n            </label>\n            <button type=\"button\" onClick={togglePassword}>\n              {\" \"}\n              {passwordType === \"password\" ? (\n                <i className=\"bi bi-eye-slash\"></i>\n              ) : (\n                <i className=\"bi bi-eye\"></i>\n              )}\n            </button>\n            {isServerError ? (\n              <p className=\"error\">Login failed, incorrect credentials!</p>\n            ) : null}\n\n            <button className=\"loginButton\">Login</button>\n            <div className=\"registerLink\">\n              Dont have an account? <Link to=\"/register\">Sign up</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAA+BR,UAAU,CAACG,WAAD,CAA/C;EACA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,UAAD,CAAhD;EACA,MAAMS,aAAa,GAAG;IAAEC,KAAK,EAAE,EAAT;IAAaC,QAAQ,EAAE;EAAvB,CAAtB;EACA,MAAM,CAACC,QAAD,EAAWC,iBAAX,EAA8BC,YAA9B,EAA4CC,KAA5C,IAAqDb,aAAa,CACtEO,aADsE,EAEtEJ,SAFsE,CAAxE;EAKAN,SAAS,CAAC,MAAM;IACd,IAAIO,aAAJ,EAAmB;MACjBS,KAAK;IACN;EACF,CAJQ,EAIN,CAACT,aAAD,CAJM,CAAT;;EAMA,MAAMU,cAAc,GAAG,MAAM;IAC3B,IAAIT,YAAY,KAAK,UAArB,EAAiC;MAC/BC,eAAe,CAAC,MAAD,CAAf;MACA;IACD;;IACDA,eAAe,CAAC,UAAD,CAAf;EACD,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,uBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE;UAAM,SAAS,EAAC,MAAhB;UAAuB,QAAQ,EAAEM,YAAjC;UAAA,wBACE;YAAO,SAAS,EAAC,YAAjB;YAAA,qBACS,GADT,eAEE;cACE,IAAI,EAAC,MADP;cAEE,IAAI,EAAC,OAFP;cAGE,KAAK,EAAEF,QAAQ,CAACF,KAHlB;cAIE,QAAQ,EAAEG;YAJZ;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAUE;YAAA,wBACY,GADZ,eAEE;cACE,IAAI,EAAEN,YADR;cAEE,IAAI,EAAC,UAFP;cAGE,KAAK,EAAEK,QAAQ,CAACD,QAHlB;cAIE,QAAQ,EAAEE;YAJZ;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAVF,eAmBE;YAAQ,IAAI,EAAC,QAAb;YAAsB,OAAO,EAAEG,cAA/B;YAAA,WACG,GADH,EAEGT,YAAY,KAAK,UAAjB,gBACC;cAAG,SAAS,EAAC;YAAb;cAAA;cAAA;cAAA;YAAA,QADD,gBAGC;cAAG,SAAS,EAAC;YAAb;cAAA;cAAA;cAAA;YAAA,QALJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAnBF,EA2BGD,aAAa,gBACZ;YAAG,SAAS,EAAC,OAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADY,GAEV,IA7BN,eA+BE;YAAQ,SAAS,EAAC,aAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QA/BF,eAgCE;YAAK,SAAS,EAAC,cAAf;YAAA,kDACwB,QAAC,IAAD;cAAM,EAAE,EAAC,WAAT;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADxB;UAAA;YAAA;YAAA;YAAA;UAAA,QAhCF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD,CAnED;;GAAMF,S;UAIuDF,a;;;KAJvDE,S;AAqEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}