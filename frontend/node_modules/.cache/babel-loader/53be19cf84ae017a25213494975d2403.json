{"ast":null,"code":"import axios from \"axios\";\n\nasync function getAllPosts() {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\");\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getPosts(userId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + userId);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getAPost(postId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + postId);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getAPostsLikedList(postId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + postId);\n\n    if (response) {\n      return response.data.liked;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n} // async function updateLikeList(obj) {\n//   try {\n//     let response = await axios.post(\"http://localhost:3007/api/posts/\" + postId, obj);\n//     if (response) {\n//       return response.data;\n//     }\n//   } catch (error) {\n//     console.log(\"Error adding post: \" + error);\n//   }\n// }\n\n\nasync function updatePosts(obj) {\n  try {\n    let response = await axios.post(\"http://localhost:3007/api/posts/\", obj);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error adding post: \" + error);\n  }\n}\n\nasync function updateAPost(postId, obj) {\n  try {\n    let response = await axios.put(\"http://localhost:3007/api/posts/\" + postId, obj);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error adding post: \" + error);\n  }\n}\n\nasync function deletePost(postId) {\n  try {\n    let response = await axios.delete(\"http://localhost:3007/api/posts/\" + postId);\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error deleting post: \" + error);\n  }\n}\n\nconst AxiosPosts = {\n  getAllPosts,\n  deletePost,\n  updatePosts,\n  getPosts,\n  getAPost,\n  updateAPost,\n  getAPostsLikedList,\n  updateLikeList\n};\nexport default AxiosPosts;","map":{"version":3,"names":["axios","getAllPosts","response","get","data","error","console","log","getPosts","userId","getAPost","postId","getAPostsLikedList","liked","updatePosts","obj","post","updateAPost","put","deletePost","delete","AxiosPosts","updateLikeList"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/Routes/postRoutes.js"],"sourcesContent":["import axios from \"axios\";\n\nasync function getAllPosts() {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\");\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getPosts(userId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + userId);\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getAPost(postId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + postId);\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error getting posts: \" + error);\n  }\n}\n\nasync function getAPostsLikedList (postId) {\n  try {\n    let response = await axios.get(\"http://localhost:3007/api/posts/\" + postId);\n    if (response) {\n      return response.data.liked;\n    } \n  } catch (error) {\n      console.log(\"Error getting posts: \" + error);\n  }\n}\n\n// async function updateLikeList(obj) {\n//   try {\n//     let response = await axios.post(\"http://localhost:3007/api/posts/\" + postId, obj);\n//     if (response) {\n//       return response.data;\n//     }\n//   } catch (error) {\n//     console.log(\"Error adding post: \" + error);\n//   }\n// }\n\nasync function updatePosts(obj) {\n  try {\n    let response = await axios.post(\"http://localhost:3007/api/posts/\", obj);\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error adding post: \" + error);\n  }\n}\nasync function updateAPost(postId, obj) {\n  try {\n    let response = await axios.put(\n      \"http://localhost:3007/api/posts/\" + postId,\n      obj\n    );\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error adding post: \" + error);\n  }\n}\n\nasync function deletePost(postId) {\n  try {\n    let response = await axios.delete(\n      \"http://localhost:3007/api/posts/\" + postId\n    );\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error deleting post: \" + error);\n  }\n}\n\nconst AxiosPosts = {\n  getAllPosts,\n  deletePost,\n  updatePosts,\n  getPosts,\n  getAPost,\n  updateAPost,\n  getAPostsLikedList,\n  updateLikeList\n};\nexport default AxiosPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}