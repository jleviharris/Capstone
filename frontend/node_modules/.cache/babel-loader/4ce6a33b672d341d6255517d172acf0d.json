{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:3007/api\"; // Change status to online\n\nasync function online(userId) {\n  try {\n    let response = await axios.put(`${baseUrl}/status/online/626eeac409e264359b2611f4`, {\n      userId: userId\n    });\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error changing to online status: \" + error);\n  }\n} // Change status to offline\n\n\nasync function offline(userId) {\n  try {\n    let response = await axios.put(`${baseUrl}/status/offline/626eeac409e264359b2611f4`, {\n      userId: userId\n    });\n\n    if (response) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(\"Error changing to offline status: \" + error);\n  }\n}\n\nasync function onlineUser() {\n  try {\n    let response = await axios.get(`${baseUrl}/status`);\n\n    if (response) {\n      console.log(response.data[0].online);\n      return response.data[0].online;\n    }\n  } catch (error) {\n    console.log(\"Error getting list of online users: \" + error);\n  }\n}\n\nconst AxiosOnlineStatus = {\n  offline,\n  online,\n  onlineUser\n};\nexport default AxiosOnlineStatus;","map":{"version":3,"names":["axios","baseUrl","online","userId","response","put","data","error","console","log","offline","onlineUser","get","AxiosOnlineStatus"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week8/Projects/SocialMediaGroupProject/ImpostersCodeBook/frontend/src/Routes/status.js"],"sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3007/api\";\n\n// Change status to online\nasync function online(userId) {\n    try {\n      let response = await axios.put(`${baseUrl}/status/online/626eeac409e264359b2611f4`, {userId: userId});\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error changing to online status: \" + error);\n    }\n  }\n\n// Change status to offline\nasync function offline(userId) {\n    try {\n      let response = await axios.put(`${baseUrl}/status/offline/626eeac409e264359b2611f4`, {userId: userId});\n      if (response) {\n        return response.data;\n      }\n    } catch (error) {\n      console.log(\"Error changing to offline status: \" + error);\n    }\n  }\n\nasync function onlineUser(){\n  try {\n    let response = await axios.get(`${baseUrl}/status`)\n    if (response){\n      console.log(response.data[0].online)\n      return response.data[0].online\n    }\n  } catch (error) {\n    console.log(\"Error getting list of online users: \" + error);\n  }\n}  \n\nconst AxiosOnlineStatus = {offline, online, onlineUser}\nexport default AxiosOnlineStatus;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,2BAAhB,C,CAEA;;AACA,eAAeC,MAAf,CAAsBC,MAAtB,EAA8B;EAC1B,IAAI;IACF,IAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,yCAArB,EAA+D;MAACE,MAAM,EAAEA;IAAT,CAA/D,CAArB;;IACA,IAAIC,QAAJ,EAAc;MACZ,OAAOA,QAAQ,CAACE,IAAhB;IACD;EACF,CALD,CAKE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,sCAAsCF,KAAlD;EACD;AACF,C,CAEH;;;AACA,eAAeG,OAAf,CAAuBP,MAAvB,EAA+B;EAC3B,IAAI;IACF,IAAIC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,OAAQ,0CAArB,EAAgE;MAACE,MAAM,EAAEA;IAAT,CAAhE,CAArB;;IACA,IAAIC,QAAJ,EAAc;MACZ,OAAOA,QAAQ,CAACE,IAAhB;IACD;EACF,CALD,CAKE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,uCAAuCF,KAAnD;EACD;AACF;;AAEH,eAAeI,UAAf,GAA2B;EACzB,IAAI;IACF,IAAIP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,SAArB,CAArB;;IACA,IAAIG,QAAJ,EAAa;MACXI,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBJ,MAA7B;MACA,OAAOE,QAAQ,CAACE,IAAT,CAAc,CAAd,EAAiBJ,MAAxB;IACD;EACF,CAND,CAME,OAAOK,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,yCAAyCF,KAArD;EACD;AACF;;AAED,MAAMM,iBAAiB,GAAG;EAACH,OAAD;EAAUR,MAAV;EAAkBS;AAAlB,CAA1B;AACA,eAAeE,iBAAf"},"metadata":{},"sourceType":"module"}