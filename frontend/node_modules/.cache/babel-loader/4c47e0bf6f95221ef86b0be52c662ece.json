{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/components/Friends/displaySingleUser.js\";\nimport \"../Posts/MyPost.css\";\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplaySingleUser = _ref => {\n  let {\n    singleUser,\n    setHidden,\n    handleClick,\n    userId,\n    setUserList,\n    userList\n  } = _ref;\n\n  //   useEffect(() => {\n  //     getPosts(userId);\n  //   }, []);\n  async function getPosts(spotId) {\n    let posts = await AxiosPosts.getAPostBySpotId(spotId);\n\n    if (posts) {\n      setPostList(posts);\n    } else setPostList({\n      Object: \"No Posts\"\n    });\n  }\n\n  async function deleteAPost(postId) {\n    await AxiosPosts.deletePost(postId);\n    setHidden(false);\n\n    let click = () => {\n      handleClick();\n    };\n\n    click();\n    return postId;\n  }\n\n  function setHiddenFalse() {\n    setHidden(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"delete-post\",\n    children: [singlePost && singlePost.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 39\n    }, this), singlePost.body, console.log(singlePost.name), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"my-post-button\",\n      onClick: () => {\n        if (singlePost.userId === userId) {\n          deleteAPost(singlePost._id);\n        } else alert(\"Not authorized to delete post\");\n      },\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setHiddenFalse();\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DisplaySingleUser;\nexport default DisplaySingleUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySingleUser\");","map":{"version":3,"names":["AxiosPosts","React","useEffect","DisplaySingleUser","singleUser","setHidden","handleClick","userId","setUserList","userList","getPosts","spotId","posts","getAPostBySpotId","setPostList","Object","deleteAPost","postId","deletePost","click","setHiddenFalse","singlePost","name","body","console","log","_id","alert"],"sources":["/Users/jonathanharris/Desktop/devCodeCamp/Week9/Projects/Capstone/frontend/src/components/Friends/displaySingleUser.js"],"sourcesContent":["import \"../Posts/MyPost.css\";\n\nimport AxiosPosts from \"../../Routes/postRoutes\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nconst DisplaySingleUser = ({ singleUser, setHidden, handleClick, userId, setUserList, userList }) => {\n \n\n//   useEffect(() => {\n//     getPosts(userId);\n//   }, []);\n\n  async function getPosts(spotId) {\n    let posts = await AxiosPosts.getAPostBySpotId(spotId);\n    if (posts) {\n      setPostList(posts);\n    } else setPostList({ Object: \"No Posts\" });\n  }\n\n  async function deleteAPost(postId) {\n    await AxiosPosts.deletePost(postId);\n    setHidden(false);\n    let click = () => {\n      handleClick();\n    };\n    click();\n    return postId;\n  }\n  function setHiddenFalse(){\n    setHidden(false);\n  }\n\n  return (\n    <div className=\"delete-post\">\n      {singlePost && singlePost.name} <br />\n      {singlePost.body}\n      {console.log(singlePost.name)}\n      <button\n        className=\"my-post-button\"\n        onClick={() => {\n          if (singlePost.userId === userId) {\n            deleteAPost(singlePost._id);\n          } else alert(\"Not authorized to delete post\");\n        }}\n      >\n        Delete Post\n      </button>\n      <button onClick={()=> {setHiddenFalse()}}>X</button>\n    </div>\n  );\n};\n\nexport default DisplaySingleUser;"],"mappings":";AAAA,OAAO,qBAAP;AAEA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,iBAAiB,GAAG,QAA2E;EAAA,IAA1E;IAAEC,UAAF;IAAcC,SAAd;IAAyBC,WAAzB;IAAsCC,MAAtC;IAA8CC,WAA9C;IAA2DC;EAA3D,CAA0E;;EAGrG;EACA;EACA;EAEE,eAAeC,QAAf,CAAwBC,MAAxB,EAAgC;IAC9B,IAAIC,KAAK,GAAG,MAAMZ,UAAU,CAACa,gBAAX,CAA4BF,MAA5B,CAAlB;;IACA,IAAIC,KAAJ,EAAW;MACTE,WAAW,CAACF,KAAD,CAAX;IACD,CAFD,MAEOE,WAAW,CAAC;MAAEC,MAAM,EAAE;IAAV,CAAD,CAAX;EACR;;EAED,eAAeC,WAAf,CAA2BC,MAA3B,EAAmC;IACjC,MAAMjB,UAAU,CAACkB,UAAX,CAAsBD,MAAtB,CAAN;IACAZ,SAAS,CAAC,KAAD,CAAT;;IACA,IAAIc,KAAK,GAAG,MAAM;MAChBb,WAAW;IACZ,CAFD;;IAGAa,KAAK;IACL,OAAOF,MAAP;EACD;;EACD,SAASG,cAAT,GAAyB;IACvBf,SAAS,CAAC,KAAD,CAAT;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,WACGgB,UAAU,IAAIA,UAAU,CAACC,IAD5B,oBACkC;MAAA;MAAA;MAAA;IAAA,QADlC,EAEGD,UAAU,CAACE,IAFd,EAGGC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACC,IAAvB,CAHH,eAIE;MACE,SAAS,EAAC,gBADZ;MAEE,OAAO,EAAE,MAAM;QACb,IAAID,UAAU,CAACd,MAAX,KAAsBA,MAA1B,EAAkC;UAChCS,WAAW,CAACK,UAAU,CAACK,GAAZ,CAAX;QACD,CAFD,MAEOC,KAAK,CAAC,+BAAD,CAAL;MACR,CANH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAcE;MAAQ,OAAO,EAAE,MAAK;QAACP,cAAc;MAAG,CAAxC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7CD;;KAAMjB,iB;AA+CN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}